/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashImport } from './routes/_dash'
import { Route as AuthImport } from './routes/_auth'
import { Route as DashboardDashIndexImport } from './routes/_dashboard/dash/index'
import { Route as AuthAuthLoginImport } from './routes/_auth/auth/login'

// Create/Update Routes

const DashRoute = DashImport.update({
  id: '/_dash',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const DashboardDashIndexRoute = DashboardDashIndexImport.update({
  id: '/_dashboard/dash/',
  path: '/dash/',
  getParentRoute: () => rootRoute,
} as any)

const AuthAuthLoginRoute = AuthAuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_dash': {
      id: '/_dash'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashImport
      parentRoute: typeof rootRoute
    }
    '/_auth/auth/login': {
      id: '/_auth/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthAuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_dashboard/dash/': {
      id: '/_dashboard/dash/'
      path: '/dash'
      fullPath: '/dash'
      preLoaderRoute: typeof DashboardDashIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthAuthLoginRoute: typeof AuthAuthLoginRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthLoginRoute: AuthAuthLoginRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof DashRoute
  '/auth/login': typeof AuthAuthLoginRoute
  '/dash': typeof DashboardDashIndexRoute
}

export interface FileRoutesByTo {
  '': typeof DashRoute
  '/auth/login': typeof AuthAuthLoginRoute
  '/dash': typeof DashboardDashIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_dash': typeof DashRoute
  '/_auth/auth/login': typeof AuthAuthLoginRoute
  '/_dashboard/dash/': typeof DashboardDashIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/auth/login' | '/dash'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/auth/login' | '/dash'
  id:
    | '__root__'
    | '/_auth'
    | '/_dash'
    | '/_auth/auth/login'
    | '/_dashboard/dash/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  DashRoute: typeof DashRoute
  DashboardDashIndexRoute: typeof DashboardDashIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  DashRoute: DashRoute,
  DashboardDashIndexRoute: DashboardDashIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_dash",
        "/_dashboard/dash/"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/auth/login"
      ]
    },
    "/_dash": {
      "filePath": "_dash.tsx"
    },
    "/_auth/auth/login": {
      "filePath": "_auth/auth/login.tsx",
      "parent": "/_auth"
    },
    "/_dashboard/dash/": {
      "filePath": "_dashboard/dash/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
